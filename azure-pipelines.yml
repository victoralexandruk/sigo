# specific path build
trigger: none
# trigger:
#   batch: true
#   branches:
#     include:
#     - main

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: SSH@0
      displayName: Docker Build
      inputs:
        sshEndpoint: 'VM BlueLake'
        runOptions: 'script'
        scriptPath: 'docker_build.sh'
        args: '$(GITHUB_URL_WITH_TOKEN)'
        readyTimeout: '20000'
      

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: Deploy
    pool: 
      vmImage: $(vmImageName)
    steps:
    - task: SSH@0
      displayName: Docker compose
      inputs:
        sshEndpoint: 'VM BlueLake'
        runOptions: 'commands'
        commands: 'docker-compose down'
        failOnStdErr: false
        readyTimeout: '20000'
    - task: Bash@3
      displayName: Create docker-compose.env
      inputs:
        targetType: 'inline'
        script: |
          # create docker-compose.env
          
          cat > docker-compose.env << 'EOL'
          ConnectionStrings__NormasConnection=$(ConnectionStrings.NormasConnection)
          ConnectionStrings__ConsultoriasConnection=$(ConnectionStrings.ConsultoriasConnection)
          ConnectionStrings__BlobStorage=$(ConnectionStrings.BlobStorage)
          EOL
    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'VM BlueLake'
        contents: |
          node-proxy.conf
          docker-compose.yml
          docker-compose.env
        readyTimeout: '20000'
    - task: SSH@0
      displayName: Docker compose
      inputs:
        sshEndpoint: 'VM BlueLake'
        runOptions: 'commands'
        commands: 'docker-compose up -d'
        failOnStdErr: false
        readyTimeout: '20000'