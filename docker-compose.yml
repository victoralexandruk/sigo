version: "3"
services:
  # reverse proxy
  reverse_proxy:
    image: nginx:alpine
    #restart : always
    # maps config file into the proxy container
    volumes:
      - ./node-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    links:
      - sigo_normas
      - sigo_website
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  sigo_normas:
    image: sigo/normas:dev
    #restart: always
    env_file: ./docker-compose.env
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - PathBase=/sigo/normas

  sigo_consultorias:
    image: sigo/consultorias:dev
    #restart: always
    env_file: ./docker-compose.env
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - PathBase=/sigo/consultorias

  sigo_website:
    image: sigo/website:dev
    #restart: always
    env_file: ./docker-compose.env
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - PathBase=/sigo/website
